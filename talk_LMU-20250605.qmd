---
title: "Improving ex-post data harmonisation with `xmap`"
subtitle: "Making Data Work: Tools for Better Statistical Practice"
author:
  - name: Cynthia A. Huang
    orcid: 0000-0002-9218-987X
    email: cynthia.huang@monash.edu
    affiliation:
      - Department of Econometrics and Business Statistics
format:
  presentation-revealjs+letterbox:
    css: "style/custom.css"
filters:
  - include-code-files
---

## Setup {visibility="hidden"}
```{r setup}
#| echo: false
# remotes::install_github("cynthiahqy/xmap#1")
```

::: notes
- Motivation / current issues:
  - long scripts
  - Example use cases: occupations, gdp etc. for AUS-STATE
- Introduce framework for thinking about one-to-many / many-to-one **data** transformations:
  - overall idea
  - direct to paper
  - implications for workflow
    - validate these conditions
    - use my package to do this
- Walk through examples in package
:::

# About Me!

## Who am I?

:::: {.columns}

::: {.column width="50%"}
- üë©‚Äçüéì Research Fellow supervised by [_Prof. Rob J Hyndman_](https://robjhyndman.com)
- üî™ Data preparation methods, tools & workflows
- üéôÔ∏è Regular host on [The Random Sample](https://www.therandomsample.com.au/podcasts/) podcast
  - recently interviewed Hadley Wickham about tool design!
:::

::: {.column width="50%"}

![](other_images/about-me-thesis-sketch.png)

:::

::::


<!-- :::
::: fragment
- üí± Previously:
  - Economics at the University of Melbourne
  - Data preparation for empirical social science:
      - wikipedia entries, archival magazines, trade databases, satellite images, online retail prices...
:::  -->

## About 'xmap'

::: {.columns .v-center-container}
::: {.column width="40%"}

![](other_images/problem-motivation.png)
:::

::: {.column width="60%"}
![](other_images/current-state.png)
::: 

:::

# Motivation
Ex-Post Harmonisation of Survey Statistics

## Harmonisation of Aggregate Statistics

Combining **semantically related** data collected under **distinct survey instruments** into a single analysis dataset.

. . .

![](images/illustrations/diagram_ex-post-process.png){height=500px fig-align="center"}

## Current Workflow

![](images/illustrations/diagram_current-workflow.png){fig-align="center"}

## Current Workflow - Example 1

``` {.stata include="includes/schott_algorithm_28.do" filename="schott_algorithm_28.do [800+ lines]"}
```

# Conceptual Solution

Crossmaps Framework

<!-- pull from numbats talk -->

## Proposed Solution

![](images/illustrations/diagram_framework-workflow.png){fig-align="center"}

## Graph-based data transformation

![](images/illustrations/diagram_crossmap-transform-latex.png){fig-align="center"}

::: smaller
For details see preprint: [A Unified Statistical And Computational Framework For Ex-Post Harmonisation Of Aggregate Statistics <arxiv.org/abs/2406.14163>](https://arxiv.org/abs/2406.14163)
:::

## Workflow & tool implications

![](images/screenshots/asc-poster-basic-implications.png){fig-align="center"}

<!-- {background-image="https://raw.githubusercontent.com/cynthiahqy/collection_crossmap-images/main/illustrations/xmap-hex-sticker.png" background-position="top right 10px" background-size="30%" background-repeat="no-repeat"} -->

# Implementation in R

Data Structures and Functions for using the Crossmaps Approach

## Current functionality & design

::: {.columns}
::: {.column}

Specify and Validate Crossmaps

- `{dplyr}` verbs
- `as_xmap_tbl()`
- `diagnose_as_xmap_tbl()`

<!-- ![](images/illustrations/plot_aus-split.png) -->

Apply Transformations to Data

- `apply_xmap()`
- `diagnose_apply_xmap()`

:::
::: {.column .fragment}

![](images/illustrations/plot_aus-split.png){height=600px}

<!-- **Auxillary Features [WIP]**

- extract logic from existing scripts
- graph and matrix classes
- symbolic fractional weights
- manage collections of crossmaps
- analysis of crossmap properties
- visualise and edit crossmap graphs
- ... -->
:::
:::

## Example - Splitting country level data by population share

```{r}
library(dplyr)
(split_xmap_pop <- xmap::demo$aus_state_pop_df |>
  group_by(ctry) |>
  mutate(pop_share = pop / sum(pop)) |>
  ungroup() |>
  xmap::as_xmap_tbl(
    from = ctry, to = state, weight_by = pop_share
  ))
```

## Data Transformation 'Guardrails'

Transformation logic (i.e. mappings) formatted as crossmaps can be easily validated:

::: {.columns}
::: {.column}

`diagnose_as_xmap_tbl()`:

::: {.incremental}
- weights from a given `.from` key sum to one, to preserve total mass before and after
- no missing values in the links
- no duplicated links
:::

:::
::: {.column}

`diagnose_apply_xmap()`:

::: {.incremental}
  - all key-value pairs in `.data` have matching instructions in `.xmap`
  - no missing values in `.data`
:::

:::
:::

# Current Status

## Usability & usage scenarios

::: {.columns}
::: {.column width=60%}
![](other_images/current-state.png)
:::
::: {.column width=40%}

::: {.incremental}
- üÜó Ex-Post Harmonisation Methods Research
- ü§î Broader adoption into **Data Harmonisation Workflows**
    - complexity, scale
    - interpretability of crossmaps
    - **üîÄ Translating existing scripts**
  <!-- - 'missing data' imputation
  - sensitivity analyses -->
    <!-- - ‚å®Ô∏è Encoding transformations as crossmaps
    - üîé Data provenance statements & visualisations
    - **üîÄ Translating existing scripts into crossmaps** -->
:::

:::
:::

# Translating existing scripts

## Source: Stata Script for Aggregating Occupation Codes

``` stata
/*use "C:\Users\binder\Dropbox\brett folders\Census 2015\Unit Record Data files\merged data.dta", clear*/
/* merged data occupation*/
/* professional, manager, teacher, assprofclerk, svcsales, armforces, 
xefe, farmer, craftrademach, labourer, driver, notclass */

gen farmer=0
replace farmer=1 if occupn>6000 & occupn<7000
gen teacher=0
replace teacher=1 if occupn>2400 & occupn<2500
gen professional=0
replace professional=1 if occupn>2000 & occupn<3000 & teacher==0
gen manager=0
replace manager=1 if occupn>1000 & occupn<1129
replace manager=1 if occupn>1131 & occupn<2000
gen armforces=0
replace armforces=1 if occupn<200 
gen xefe=0
replace xefe=1 if occupn==1130
gen assprofclerk=0
replace assprofclerk=1 if occupn>3000 & occupn<5000
gen svcsales=0
replace svcsales=1 if occupn>5000 & occupn<6000
replace svcsales=1 if occupn>9000 & occupn<9200
gen labourer=0
replace labourer=1 if occupn>9200 & occupn<9320
gen driver=0
replace driver=1 if occupn>8320 & occupn<8330
replace driver=1 if occupn>9330 & occupn<9340
gen craftrademach=0
replace craftrademach=1 if occupn>7000 & occupn<9000 & driver==0
gen notclass=0
replace notclass=1 if occupn>9990 & occupn<10000

sum professional manager teacher assprofclerk svcsales armforces xefe farmer craftrademach labourer driver notclass if p3p30_school_level==6
```

## Extract & Validate Transformation

```{r}
library(readr)
links <- readr::read_csv(file.path("example_narrow-occpns", "output", "dta_links.csv"),
    col_types = cols(
        from = col_character(),
        to = col_character(),
        weights = col_double()
    )
)
```

:::: {.columns}

::: {.column}

```{r}
#| echo: true
#| message: true
links
```
:::

::: {.column}
```{r}
#| echo: true
#| message: true
xmap::diagnose_as_xmap_tbl(links, from, to, weights)
```
:::

::::

## Summarise Transformation
```{r}
summary_tbl <- readr::read_csv(
  file.path("example_narrow-occpns", "output", "paper_example.csv"),
  col_types = cols(
  to = col_character(),
  n_from = col_double(),
  n_unique = col_skip(),
  parts_from3 = col_skip(),
  parts_from = col_character()
))
```

::: {.smaller}

```{r}
knitr::kable(summary_tbl)
```
:::



## Your Turn: Motivating Examples

::: {.columns}
::: {.column}
Choose your own adventure:

- [üîó Example STATA script repo](https://github.com/cynthiahqy/example_narrow-occpns)
  - 03a, 03b can be run without STATA
- [üì¶ Splitting country-level aggregates - xmap vignette](https://cynthiahqy.github.io/xmap/articles/xmap.html)
- Appendix of these slides
:::
::: {.column}
Looking for feedback/suggestions:

- Extract/generate mappings
  - Ask an LLM directly to translate STATA script?
  - Pass 'carbon copy' data through the STATA script?
  - Ask an LLM for a crossmap based on mapping logic?
- Other comments and ideas
:::
:::




# Appendix: xmap walk-through

## Example: Occupation Code Mappings

```{r}
#| label: set-up-anzsco
#| echo: false
#| message: false
#| file: includes/anzsco-example.R
```

::: {.columns}
::: {.column}
ANZSCO22 to ISCO8

![](images/plots/plot-anzsco-isco-bigraph-with-table.png){height=550px}
:::
::: {.column}
Stylised Occupation Level Counts

::: smaller
```{r}
## stylised occupation counts 
## from total of 2000 observed individuals
xmap::demo$anzsco22_stats |> 
  kableExtra::kable()
```

Hypothetically aggregated from **2000** individual responses
:::

:::
::: 

## Creating a Valid Crossmap

Start with *crosswalk*, or *lookup table*:

```{r}
xmap::demo$anzsco22_isco8_crosswalk
```

## Creating a Valid Crossmap

Add some naive (equal) distribution weights:

```{r}
#| echo: true
#| output-location: column-fragment
library(dplyr)
library(xmap)

crosswalk <- 
  xmap::demo$anzsco22_isco8_crosswalk |>
  select(anzsco22, isco8)

(
links <- crosswalk |>
  group_by(anzsco22) |>
  mutate(equal = 1 / n_distinct(isco8)) |>
  ungroup()
)
```

## Creating a Valid Crossmap

... and coerce to a crossmap:

```{r}
#| echo: true
#| output-location: column-fragment
(
occp_xmap <- links |>
  xmap::as_xmap_tbl(
    from = anzsco22,
    to = isco8,
    weight_by = equal
  )
)
```

## ! ERROR: Invalid Weights

What if we try to naively use unit weights?

::: {.columns}
::: {.column}
```{r}
#| error: true
#| echo: true
#| output-location: fragment
crosswalk |>
  mutate(ones = 1) |>
  xmap::as_xmap_tbl(
    from = anzsco22,
    to = isco8,
    weight_by = ones
  )
```
:::
::: {.column .fragment}
```{r}
#| echo: true
crosswalk |>
  mutate(ones = 1) |>
  xmap::diagnose_as_xmap_tbl(
    anzsco22, isco8,
    weight_by = ones
  )
```
:::
:::

## Applying a Valid Crossmap to Conformable Data

::: {.columns}
::: {.column}

Stylised counts from before...

```{r}
#| echo: true
(occp_stats <- 
  xmap::demo$anzsco22_stats |>
  mutate(ref = 100)
)
```
:::
::: {.column .fragment}
Transformed, with redistribution and aggregation:

```{r}
#| echo: true
#| error: true
#| output-location: fragment
occp_stats |>
  xmap::apply_xmap(
    .xmap = occp_xmap,
    values_from = c(count, ref),
    keys_from = anzsco22
  )
```
:::
:::

## Future Development {visibility="hidden"}

::: {.columns}
::: {.column width=70%}

- *data provenance documentation*
    - multi-partite graph visualisation
    - summary of crossmap properties
- *extracting mapping logic from existing scripts*
    - manipulate data input
    - parse AST into computational graph
- *advanced workflows and interactive interfaces*
    - interactive editing of mapping
    - multiple transformations

:::
::: {.column width=30%}
![](images/plots/plot-isiccomb-split-by-income-groups.png)

![](images/screenshots/screenshot_visxprov-ctry-proposed.png)
:::
:::

## Thanks for listening! {visibility="hidden"}

:::: columns
::: {.column width=70%}
::: {.smaller}

Try the package: 

* Install from GitHub: [cynthiahqy/xmap](https://github.com/cynthiahqy/xmap)
* ...soon to be on CRAN


Ask me about related work and applications:

- üá¶üáπ **_UseR!, Salzburg (Jul 8-11)_**
- üá∫üá∏ JSM, Portland (Aug 3-9)
- üá∫üá∏ posit::conf(2024), Seattle (Aug 12-14)
- üá®üá¶ UBC, Vancouver, (Jul-Nov)
- üá¶üá∫ Monash University, Melbourne (Nov onwards)

Or online: `@cynthiahqy` & [`cynthiahqy.com`](https://www.cynthiahqy.com)
:::
:::

::: {.column width=30%}
<!-- ![](includes/headshot-cynthia.jpg){style="border-radius:50%" height="400px"} -->

![](images/illustrations/xmap-hex-sticker.png)
:::
::::